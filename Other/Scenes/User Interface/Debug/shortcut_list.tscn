[gd_scene load_steps=8 format=3 uid="uid://cg5jpj6df864v"]

[ext_resource type="Texture2D" uid="uid://cgij2ayo7erbd" path="res://Assets/Graphics/sprites/sprites_userInterface.png" id="1_u3eol"]
[ext_resource type="Theme" uid="uid://dcxfejhbbj3pi" path="res://Other/Themes/displays_theme.tres" id="2_yoo5o"]

[sub_resource type="Shader" id="Shader_mtegs"]
code = "shader_type canvas_item;
#pragma disable_preprocessor

uniform bool		disableProcessing;
uniform vec4		modulate: source_color = vec4(1.0);

group_uniforms		palette;
uniform sampler2D	palette: filter_nearest;

group_uniforms		cycling;
uniform int			cycleMode: hint_range(0, 2, 1);
uniform float		cycleRate: hint_range(-120, 120, 1);
uniform float		cycleOffset: hint_range(0, 256, 0.1);
uniform bool		colorBlending;

vec4 applyPalette(vec4 sprTex)
{	// Palette data
	ivec2	palSize	 = textureSize(palette, 0);
	int		palCount = palSize.x * palSize.y;
	
	// Color channel data
	float idxPalette = floor(sprTex.r * 256.00);	// Color index
	float idxCycEnds = floor(sprTex.g * 256.00);	// Color cycle end index
	float idxCycLeng = floor(sprTex.b * 256.00);	// Color cycle length
	
	// Cycling
	float idxCycle	 = cycleOffset + TIME * cycleRate;	// Cycle frame
	float idxCycNext = idxPalette;
	
	// Ignore index #0
	if (idxPalette > 0.0)
	{
		switch (cycleMode)
		{
			case 1:		// Localized color cycling
				if (idxCycEnds * idxCycLeng > 0.0)
				{
					idxPalette = floor(idxPalette + mod(idxCycle, idxCycLeng));
					idxCycNext = idxPalette + 1.0;
					
					// Wrap indices around if they exceed end of cycle
					if (idxPalette > idxCycEnds)
						idxPalette -= idxCycLeng;

					if (idxCycNext > idxCycEnds)
						idxCycNext -= idxCycLeng;
				}
				break;

			case 2:		// Palette-wide color cycling
				idxPalette = floor(idxPalette + idxCycle);
				idxCycNext = idxPalette + 1.0;
				break;
		}
		// Wrap indices back within palette bounds, skipping index 0
		idxPalette = mod(idxPalette - 1.0, float(palCount - 1)) + 1.0;
		idxCycNext = mod(idxCycNext - 1.0, float(palCount - 1)) + 1.0;
	}
	
	// Palette sampler UV
	float yxUV = idxPalette / float(palSize.x);
	
	// Sample palette from center of pixel (maximum result accuracy)
	float xUV = fract(yxUV) + (0.5 / float(palSize.x));
	float yUV = floor(yxUV) / float(palSize.y) + (0.5 / float(palSize.y));
	vec2 palUV = vec2(xUV, yUV);
	
	if (!colorBlending)
	{
		// Unblended result
		return texture(palette, palUV);
	}
	else
	{
		// Next cycle step sampler UV
		float nyxUV = idxCycNext / float(palSize.x);
		
		// Center next index sampler
		float nxUV = fract(nyxUV) + (0.5 / float(palSize.x));
		float nyUV = floor(nyxUV) / float(palSize.y) + (0.5 / float(palSize.y));
		vec2 nxtUV = vec2(nxUV, nyUV);
		
		// Blend result
		vec4 pixel	= texture(palette, palUV);
		vec4 next	= texture(palette, nxtUV);
		return mix(pixel, next, fract(idxCycle));
	}
}

void fragment()
{
	if (!disableProcessing)
	{
		COLOR = applyPalette(texture(TEXTURE, UV)) * modulate * COLOR.a;
		
	}

}

"

[sub_resource type="Gradient" id="Gradient_ymvqi"]
offsets = PackedFloat32Array(0, 0.801762, 1)
colors = PackedColorArray(1, 1, 0, 1, 1, 0, 0.403922, 1, 0, 0.435294, 1, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_m6xgq"]
gradient = SubResource("Gradient_ymvqi")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_gfp88"]
shader = SubResource("Shader_mtegs")
shader_parameter/disableProcessing = false
shader_parameter/modulate = Color(0, 0, 1, 1)
shader_parameter/palette = SubResource("GradientTexture2D_m6xgq")
shader_parameter/cycleMode = 2
shader_parameter/cycleRate = 10.0
shader_parameter/cycleOffset = 0.0
shader_parameter/colorBlending = true

[sub_resource type="AtlasTexture" id="AtlasTexture_1rw7s"]
atlas = ExtResource("1_u3eol")
region = Rect2(320, 128, 192, 192)

[node name="Debug Shortcut List Root" type="TextureRect"]
material = SubResource("ShaderMaterial_gfp88")
offset_right = 960.0
offset_bottom = 512.0
texture = SubResource("AtlasTexture_1rw7s")

[node name="Debug Shortcut List" type="BoxContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = 24.0
offset_top = 24.0
offset_right = -24.0
offset_bottom = -24.0
grow_horizontal = 2
grow_vertical = 2
vertical = true

[node name="shortcut" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 128.0
offset_bottom = 32.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "BACKSPACE => Kill player"

[node name="shortcut2" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut2"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 168.0
offset_bottom = 24.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "CTRL + R => Restart current level"

[node name="shortcut3" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut3"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 168.0
offset_bottom = 24.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "+ => Zoom in, - => Zoom out, 0 => Reset zoom"

[node name="shortcut4" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut4"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 168.0
offset_bottom = 24.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "Q (hold) => Quickselect"

[node name="shortcut5" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut5"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 168.0
offset_bottom = 24.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "CTRL + C => Cheat Flight (requires cheat mode)"

[node name="shortcut6" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut6"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 168.0
offset_bottom = 24.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "ESC => Level select screen, UP ARROW + ESC => Main menu"

[node name="shortcut7" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut7"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 168.0
offset_bottom = 24.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "empty"

[node name="shortcut8" type="Control" parent="Debug Shortcut List"]
layout_mode = 2
size_flags_vertical = 3

[node name="shortcut" type="Label" parent="Debug Shortcut List/shortcut8"]
custom_minimum_size = Vector2(128, 0)
layout_mode = 2
offset_right = 168.0
offset_bottom = 24.0
theme = ExtResource("2_yoo5o")
theme_override_colors/font_shadow_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 16
text = "empty
"
