[gd_scene load_steps=14 format=3 uid="uid://hqvc1gavvhxg"]

[ext_resource type="Texture2D" uid="uid://dg6jtka113eq1" path="res://Assets/Graphics/sprites/sprites_enemies.png" id="2_d2tmv"]
[ext_resource type="AudioStream" uid="uid://dhynky8rqqjl3" path="res://Assets/Sounds/sfx/btn_slash.wav" id="3_ajo4m"]
[ext_resource type="AudioStream" uid="uid://rh0kg1bylcom" path="res://Assets/Sounds/sfx/ko1.wav" id="4_bednr"]

[sub_resource type="GDScript" id="GDScript_h8ikb"]
script/source = "extends CharacterBody2D


const SPEED = 150.0
const JUMP_VELOCITY = -250.0

@onready var sprite = $AnimatedSprite2D

@onready var attacking_timer = $AnimatedSprite2D/AttackingTimer
@onready var attacked_timer = $AnimatedSprite2D/AttackedTimer
@onready var dead_timer = $AnimatedSprite2D/DeadTimer

@onready var particle_limiter = $particle_limiter

@onready var hit = $hit
@onready var death = $death


var hp = 7

var starParticle_fastScene = preload(\"res://particles_starFast.tscn\")
var starParticle_fast = starParticle_fastScene.instantiate()
var hit_effectScene = preload(\"res://hit_effect.tscn\")
var hit_effect = hit_effectScene.instantiate()
var dead_effectScene = preload(\"res://dead_effect.tscn\")
var dead_effect = dead_effectScene.instantiate()

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = ProjectSettings.get_setting(\"physics/2d/default_gravity\")

var direction = -1




#MAIN PROCESS

func _physics_process(delta):
	$Label.text = str(get_groups())
	if not $scanForLedge.get_collider() and is_on_floor() or is_on_wall():
		if direction == 1:
			direction = -1
			$scanForLedge.position.x = -32
			
		else:
			direction = 1
			$scanForLedge.position.x = 32
			
			
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	
	if direction and not dead:
		velocity.x = move_toward(velocity.x, direction * SPEED, delta * 800)


	else:
		velocity.x = move_toward(velocity.x, 0, 10)
		
	manage_animation()
	move_and_slide()
		


#func _on_direction_timer_timeout():
#	if not dead:
#		velocity.y = JUMP_VELOCITY
#		if direction == -1:
#			direction = 1
#		else:
#			direction = -1


var attacked = false;
var attacking = false;
var dead = false;

func _on_area_2d_area_entered(area):
	if area.name == \"Player_hitbox_main\" and not dead:
		Globals.playerHit1.emit()
		attacking = true
		attacking_timer.start()
		
	elif area.is_in_group(\"player_projectile\"):
		if not dead:
			attacked = true
			attacked_timer.start()
			hit.play()
			hit_effect = hit_effectScene.instantiate()
			add_child(hit_effect)
			hp -= 1
			Globals.enemyHit.emit()
			if hp <= 0:
				dead = true
				if dead:
					direction = 0
					sprite.play(\"dead\")
					death.play()
					add_child(dead_effect)
					
	
	#SAVE START
	
	elif area.name == \"loadingZone1\" or area.name == \"loadingZone2\" or area.name == \"loadingZone3\" or area.name == \"loadingZone4\" or area.name == \"loadingZone5\":
		remove_from_group(\"loadingZone0\")
		remove_from_group(\"loadingZone1\")
		remove_from_group(\"loadingZone2\")
		remove_from_group(\"loadingZone3\")
		remove_from_group(\"loadingZone4\")
		remove_from_group(\"loadingZone5\")
		
		loadingZone = area.name
		add_to_group(loadingZone)
		
		#print(\"this object is in: \", loadingZone)
	
	#SAVE END



func manage_animation():
	if not dead:
		if not attacked and not attacking and not dead:
			if direction == -1:
				sprite.play(\"walk\")
				sprite.flip_h = true
				
			if direction == 1:
				sprite.play(\"walk\")
				sprite.flip_h = false
			
			
		if attacking:
		
			sprite.play(\"attack\")
			if direction == 1:
				sprite.flip_h = false
			else:
				sprite.flip_h = true
				
		if attacked and not attacking:
			sprite.play(\"damage\")
			if direction == 1:
				sprite.flip_h = false
			else:
				sprite.flip_h = true
			
			if not particle_buffer:
				starParticle_fast = starParticle_fastScene.instantiate()
				add_child(starParticle_fast)
			
				particle_limiter.start()
				particle_buffer = true
			
	


func _on_attacking_timer_timeout():
	attacking = false


func _on_attacked_timer_timeout():
	attacked = false


func _on_dead_timer_timeout():
	dead = false


var particle_buffer = false

func _on_particle_limiter_timeout():
	particle_buffer = false


func _on_visible_on_screen_notifier_2d_screen_exited():
	if dead:
		queue_free()




func _ready():
	add_to_group(\"loadingZone0\")
	
	set_process(false)
	set_physics_process(false)
	
	set_process_input(false)
	set_process_internal(false)
	set_process_unhandled_input(false)
	set_process_unhandled_key_input(false)
	
	sprite.pause()
	sprite.visible = false
	$Area2D.set_monitorable(false)
	
	$CollisionShape2D.disabled = true
	$AnimatedSprite2D/AttackingTimer.set_paused(true)
	$AnimatedSprite2D/AttackedTimer.set_paused(true)
	$AnimatedSprite2D/DeadTimer.set_paused(true)
	$scanForLedge.set_enabled(false)
	






#IS IN VISIBLE RANGE?

func offScreen_unload():
	set_process(false)
	set_physics_process(false)
	
	set_process_input(false)
	set_process_internal(false)
	set_process_unhandled_input(false)
	set_process_unhandled_key_input(false)
	
	sprite.pause()
	sprite.visible = false
	$Area2D.set_monitorable(false)
	
	$CollisionShape2D.disabled = true
	$AnimatedSprite2D/AttackingTimer.set_paused(true)
	$AnimatedSprite2D/AttackedTimer.set_paused(true)
	$AnimatedSprite2D/DeadTimer.set_paused(true)
	$scanForLedge.set_enabled(false)



func offScreen_load():
	set_process(true)
	set_physics_process(true)
	
	set_process_input(true)
	set_process_internal(true)
	set_process_unhandled_input(true)
	set_process_unhandled_key_input(true)
	
	sprite.play()
	sprite.visible = true
	$Area2D.set_monitorable(true)
	
	$CollisionShape2D.disabled = false
	$AnimatedSprite2D/AttackingTimer.set_paused(false)
	$AnimatedSprite2D/AttackedTimer.set_paused(false)
	$AnimatedSprite2D/DeadTimer.set_paused(false)
	$scanForLedge.set_enabled(true)






#SAVE START

var loadingZone = \"loadingZone0\"

func save():
	var save_dict = {
		\"loadingZone\" : loadingZone,
		\"filename\" : get_scene_file_path(),
		\"parent\" : get_parent().get_path(),
		\"pos_x\" : position.x, # Vector2 is not supported by JSON
		\"pos_y\" : position.y,
		\"direction\" : direction,
		\"health\" : hp,
		
	}
	return save_dict

#SAVE END
"

[sub_resource type="AtlasTexture" id="AtlasTexture_tbyi6"]
atlas = ExtResource("2_d2tmv")
region = Rect2(340, 689, 68, 65)

[sub_resource type="AtlasTexture" id="AtlasTexture_lkttj"]
atlas = ExtResource("2_d2tmv")
region = Rect2(136, 689, 68, 65)

[sub_resource type="AtlasTexture" id="AtlasTexture_swrfg"]
atlas = ExtResource("2_d2tmv")
region = Rect2(204, 689, 68, 65)

[sub_resource type="AtlasTexture" id="AtlasTexture_ec7yj"]
atlas = ExtResource("2_d2tmv")
region = Rect2(272, 690, 68, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_rf625"]
atlas = ExtResource("2_d2tmv")
region = Rect2(0, 690, 68, 64)

[sub_resource type="AtlasTexture" id="AtlasTexture_rmtrc"]
atlas = ExtResource("2_d2tmv")
region = Rect2(68, 690, 68, 64)

[sub_resource type="SpriteFrames" id="SpriteFrames_5cx1g"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_tbyi6")
}],
"loop": true,
"name": &"attack",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_lkttj")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_swrfg")
}],
"loop": true,
"name": &"damage",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ec7yj")
}],
"loop": true,
"name": &"dead",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_rf625")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rmtrc")
}],
"loop": true,
"name": &"walk",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_4klqh"]
size = Vector2(64, 32)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_7kt5p"]
size = Vector2(20, 32)

[node name="enemyHedgehog" type="CharacterBody2D" groups=["Persist", "enemies"]]
z_index = 1
collision_layer = 4
floor_max_angle = 1.0472
floor_snap_length = 15.0
script = SubResource("GDScript_h8ikb")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
position = Vector2(0, -8)
sprite_frames = SubResource("SpriteFrames_5cx1g")
animation = &"attack"

[node name="AttackingTimer" type="Timer" parent="AnimatedSprite2D"]
wait_time = 0.75
one_shot = true

[node name="AttackedTimer" type="Timer" parent="AnimatedSprite2D"]
wait_time = 0.75
one_shot = true

[node name="DeadTimer" type="Timer" parent="AnimatedSprite2D"]
wait_time = 0.75
one_shot = true

[node name="Area2D" type="Area2D" parent="."]
light_mask = 2
visibility_layer = 2
collision_layer = 4
collision_mask = 2

[node name="main_collision" type="CollisionShape2D" parent="Area2D"]
position = Vector2(0, 8)
shape = SubResource("RectangleShape2D_4klqh")

[node name="Timer" type="Timer" parent="."]
wait_time = 8.0
autostart = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, 8)
shape = SubResource("RectangleShape2D_7kt5p")

[node name="particle_limiter" type="Timer" parent="."]
wait_time = 0.2
one_shot = true

[node name="hit" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("3_ajo4m")

[node name="death" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("4_bednr")
volume_db = 5.0

[node name="VisibleOnScreenNotifier2D" type="VisibleOnScreenNotifier2D" parent="."]
modulate = Color(1, 1, 1, 0.0980392)
rect = Rect2(-500, -500, 1000, 1000)

[node name="scanForLedge" type="RayCast2D" parent="."]
position = Vector2(-32, -8)
target_position = Vector2(0, 88)

[node name="Label" type="Label" parent="."]
offset_right = 40.0
offset_bottom = 23.0
text = "test"

[connection signal="timeout" from="AnimatedSprite2D/AttackingTimer" to="." method="_on_attacking_timer_timeout"]
[connection signal="timeout" from="AnimatedSprite2D/AttackedTimer" to="." method="_on_attacked_timer_timeout"]
[connection signal="timeout" from="AnimatedSprite2D/DeadTimer" to="." method="_on_dead_timer_timeout"]
[connection signal="area_entered" from="Area2D" to="." method="_on_area_2d_area_entered"]
[connection signal="timeout" from="Timer" to="." method="_on_direction_timer_timeout"]
[connection signal="timeout" from="particle_limiter" to="." method="_on_particle_limiter_timeout"]
[connection signal="screen_entered" from="VisibleOnScreenNotifier2D" to="." method="offScreen_load"]
[connection signal="screen_exited" from="VisibleOnScreenNotifier2D" to="." method="_on_visible_on_screen_notifier_2d_screen_exited"]
[connection signal="screen_exited" from="VisibleOnScreenNotifier2D" to="." method="offScreen_unload"]
