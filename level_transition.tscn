[gd_scene load_steps=8 format=3 uid="uid://c72fsx7pp0uvj"]

[ext_resource type="Script" path="res://Scripts/level_transition.gd" id="1_bav2q"]

[sub_resource type="Animation" id="Animation_g0n3s"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0, 0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_4gc5e"]
resource_name = "fade_from_black"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 1), Color(0, 0, 0, 0)]
}

[sub_resource type="Animation" id="Animation_wyr23"]
resource_name = "fade_to_black"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(0, 0, 0, 0), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_olarl"]
_data = {
"RESET": SubResource("Animation_g0n3s"),
"fade_from_black": SubResource("Animation_4gc5e"),
"fade_to_black": SubResource("Animation_wyr23")
}

[sub_resource type="Shader" id="Shader_0mr7p"]
code = "shader_type canvas_item;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
    float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
    hue = fract(hue + fract(TIME  * speed));
    float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
    vec3 rainbow;
    if(hue < 1./6.){
        rainbow = vec3(1., x, 0.);
    } else if (hue < 1./3.) {
        rainbow = vec3(x, 1., 0);
    } else if (hue < 0.5) {
        rainbow = vec3(0, 1., x);
    } else if (hue < 2./3.) {
        rainbow = vec3(0., x, 1.);
    } else if (hue < 5./6.) {
        rainbow = vec3(x, 0., 1.);
    } else {
        rainbow = vec3(1., 0., x);
    }
    vec4 color = texture(TEXTURE, UV);
    COLOR = mix(color, vec4(rainbow, color.a), strength) * COLOR.a;
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_418np"]
resource_local_to_scene = true
shader = SubResource("Shader_0mr7p")
shader_parameter/strength = 0.5
shader_parameter/speed = 0.5
shader_parameter/angle = 0.0

[node name="LevelTransition" type="CanvasLayer"]
process_mode = 3
script = ExtResource("1_bav2q")
metadata/_edit_horizontal_guides_ = []

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
process_mode = 3
libraries = {
"": SubResource("AnimationLibrary_olarl")
}

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_418np")
offset_right = 1920.0
offset_bottom = 1080.0
mouse_filter = 2
color = Color(0, 0, 0, 0)
